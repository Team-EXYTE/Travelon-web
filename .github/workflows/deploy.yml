name: Deploy to EC2

on:
  push:
    branches: [ release ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install dependencies
      run: npm ci

    - name: Build Next.js
      run: npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        MSPACE_API_URL: ${{ secrets.MSPACE_API_URL }}
        MSPACE_APP_ID: ${{ secrets.MSPACE_APP_ID }}
        MSPACE_PASSWORD: ${{ secrets.MSPACE_PASSWORD }}
        MSPACE_APP_HASH: ${{ secrets.MSPACE_APP_HASH }}
        MSPACE_APP_CODE: ${{ secrets.MSPACE_APP_CODE }}

    - name: Prune dev dependencies (production only)
      run: npm prune --production

    - name: Archive built files
      run: |
        tar -czf travelon-build.tar.gz \
        package.json package-lock.json node_modules .next public next.config.ts

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Load NVM so Node/npm/pm2 are available
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

          # Verify tools
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "PM2 version: $(pm2 -v)"

          cd /home/ubuntu/Travelon-web

          echo "Pulling latest code..."
          git fetch origin release
          git reset --hard origin/release

          echo "Stopping existing app..."
          pm2 stop travelon || true

          echo "Cleaning old files..."
          rm -rf package.json package-lock.json node_modules .next public next.config.ts

    - name: Upload artifacts to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: travelon-build.tar.gz
        target: /home/ubuntu/Travelon-web/

    - name: Extract build on EC2 and start app
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/Travelon-web
          tar -xzf travelon-build.tar.gz
          rm travelon-build.tar.gz

          echo "Starting app with PM2..."
          pm2 start npm --name "travelon" -- run start || pm2 restart travelon
          pm2 save

          echo "Deployment complete!"